name: Update Assets from Olive June Scrapper

on:
  workflow_dispatch:  # Allows manual trigger in GitHub Actions UI

permissions:
  contents: write  # Needed to push commits

jobs:
  update-assets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # So we can push changes later

      - name: Get latest release info
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.repos.getLatestRelease({
              owner: 'CollinDietz',
              repo: 'olive-june-gel-collection-scraper'
            });
            const asset = response.data.assets.find(a => a.name.endsWith('.tar') || a.name.endsWith('.tar.gz'));
            if (!asset) {
              throw new Error('No .tar or .tar.gz asset found in latest release.');
            }
            core.setOutput('asset_url', asset.browser_download_url);
            core.setOutput('release_tag', response.data.tag_name);

      - name: Download latest release asset
        run: |
            gh release download --repo CollinDietz/olive-june-gel-collection-scraper \
            --pattern "*.tar.gz" \
            --output assets.tar.gz
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract assets
        run: |
          mkdir -p extracted
          tar -xzf assets.tar.gz -C extracted

      - name: Replace assets folder
        run: |
          rm -rf assets
          mv extracted/assets ./ || mv extracted/* ./


      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add assets
          git commit -m "Update assets from olive-june-gel-collection-scraper ${{ steps.get_release.outputs.release_tag }}" || echo "No changes to commit."
          git push origin HEAD:${{ github.ref_name }}
